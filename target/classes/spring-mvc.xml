<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc   
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
       
       <!-- spring mvc如果将dispatcherServlet拦截请求设置为/，那么访问静态资源的请求也会被当成普通请求
       dispatcherServlet默认是根据名称来进行处理，这样一来，请求静态资源的请求就被当成了普通后台控制的请求。
       spring mvc给出的解决方案还有一种静态资源映射来解决。此问题可能跟spring mvc版本有关。 -->
      <mvc:default-servlet-handler/> 
       
       <!-- 配置mvc注解驱动 -->
       <mvc:annotation-driven/>
       <!-- 配置注解扫描包  只扫描controller注解-->
       <context:component-scan base-package="com.*" use-default-filters="false">
       		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
       </context:component-scan>
       
       <!-- 返回json处理 -->
	<bean id="converterjson" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="converterjson" />
			</list>
		</property>
	</bean>
    
    <!-- 文件上传下载处理 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		 <property name="maxUploadSize"><value>5000000</value></property>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	
	<!-- 静态资源映射  location是本地目录-->
	<mvc:resources location="/page/" mapping="/page/**"/>
	<mvc:resources location="/img/" mapping="/img/**"/>
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/js/" mapping="/js/**"/>
	
	<!-- <mvc:resources location="/shop/" mapping="/page/**"/> -->
	<!-- 视图解析器 -->
	 <bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <property name="prefix" value="/WEB-INF/" /> 前缀-->
		<property name="suffix" value=".html" />
	</bean>   
       
</beans>